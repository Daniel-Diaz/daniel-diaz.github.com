Preprocessing executable 'plowdocs' for plowdocs-0.1.0.0...
--> plowdocs <--
* Building environment.
* Updating Hackage packages.
Downloading the latest package list from hackage.haskell.org
* Cloning Plow repositories.
Cloning into 'binary-transform'...
Cloning into 'binary-store'...
* Building documentation.
** Guessing package name.
** Building package: binary-transform
*** Sandbox initialization.
Writing a default package environment file to
/home/mevia/Dropbox/HaskellDev/Plow/plowdocs/output/repos/binary-transform/cabal.sandbox.config
Creating a new sandbox at
/home/mevia/Dropbox/HaskellDev/Plow/plowdocs/output/repos/binary-transform/.cabal-sandbox
**** Adding source: [binary-store] .
*** Installing dependencies.
Resolving dependencies...
Notice: installing into a sandbox located at
/home/mevia/Dropbox/HaskellDev/Plow/plowdocs/output/repos/binary-transform/.cabal-sandbox
Configuring phantom-state-0.2.0.2...
Building phantom-state-0.2.0.2...
Installed phantom-state-0.2.0.2
Configuring binary-list-0.3.3.0...
Building binary-list-0.3.3.0...
Installed binary-list-0.3.3.0
*** Building.
Resolving dependencies...
Configuring binary-transform-0.1.0.0...
Building binary-transform-0.1.0.0...
Preprocessing library binary-transform-0.1.0.0...
[1 of 1] Compiling Data.BinaryList.Algorithm.BinaryTransform ( Data/BinaryList/Algorithm/BinaryTransform.hs, dist/build/Data/BinaryList/Algorithm/BinaryTransform.o )
[1 of 1] Compiling Data.BinaryList.Algorithm.BinaryTransform ( Data/BinaryList/Algorithm/BinaryTransform.hs, dist/build/Data/BinaryList/Algorithm/BinaryTransform.p_o )
In-place registering binary-transform-0.1.0.0...
*** Build succeed!
*** Building docs now.
Running Haddock for binary-transform-0.1.0.0...
Preprocessing library binary-transform-0.1.0.0...
Haddock coverage:
  87% ( 13 / 15) in 'Data.BinaryList.Algorithm.BinaryTransform'
Documentation created: dist/doc/html/binary-transform/index.html
Deleting the sandbox located at
/home/mevia/Dropbox/HaskellDev/Plow/plowdocs/output/repos/binary-transform/.cabal-sandbox
** Guessing package name.
** Building package: binary-store
*** Sandbox initialization.
Writing a default package environment file to
/home/mevia/Dropbox/HaskellDev/Plow/plowdocs/output/repos/binary-store/cabal.sandbox.config
Creating a new sandbox at
/home/mevia/Dropbox/HaskellDev/Plow/plowdocs/output/repos/binary-store/.cabal-sandbox
**** Adding source: [binary-transform] .
*** Installing dependencies.
Resolving dependencies...
Notice: installing into a sandbox located at
/home/mevia/Dropbox/HaskellDev/Plow/plowdocs/output/repos/binary-store/.cabal-sandbox
Configuring phantom-state-0.2.0.2...
Configuring bzlib-0.5.0.4...
Configuring reinterpret-cast-0.1.0...
Building reinterpret-cast-0.1.0...
Building phantom-state-0.2.0.2...
Building bzlib-0.5.0.4...
Installed phantom-state-0.2.0.2
Configuring binary-list-0.3.3.0...
Installed reinterpret-cast-0.1.0
Building binary-list-0.3.3.0...
Installed bzlib-0.5.0.4
Installed binary-list-0.3.3.0
Configuring binary-transform-0.1.0.0...
Building binary-transform-0.1.0.0...
Installed binary-transform-0.1.0.0
*** Building.
Resolving dependencies...
Configuring binary-store-0.1.0.0...
Building binary-store-0.1.0.0...
Preprocessing library binary-store-0.1.0.0...
[1 of 1] Compiling Format.BinaryStore ( Format/BinaryStore.hs, dist/build/Format/BinaryStore.o )
[1 of 1] Compiling Format.BinaryStore ( Format/BinaryStore.hs, dist/build/Format/BinaryStore.p_o )
In-place registering binary-store-0.1.0.0...
*** Build succeed!
*** Building docs now.
Running Haddock for binary-store-0.1.0.0...
Preprocessing library binary-store-0.1.0.0...
Haddock coverage:
 100% ( 24 / 24) in 'Format.BinaryStore'
Warning: Format.BinaryStore: could not find link destinations for:
    Format.BinaryStore.putValue Format.BinaryStore.getValue Format.BinaryStore.modeValue Format.BinaryStore.averageBijection
Documentation created: dist/doc/html/binary-store/index.html
Deleting the sandbox located at
/home/mevia/Dropbox/HaskellDev/Plow/plowdocs/output/repos/binary-store/.cabal-sandbox
* Deleting cloned repositories.
* Creating index.html.
* End.
